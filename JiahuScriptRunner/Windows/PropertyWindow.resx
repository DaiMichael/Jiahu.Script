<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AACeAwAAwA8AAA==
</value>
  </data>
</root>